@ngdoc overview
@name Tutorial: 0 - Bootstrapping
@description

<ul doc-tutorial-nav="0"></ul>


Теперь вы готовы приступить к созданию angular-приложения 'phonecat'. На этом этапе вы познакомитесь
с наиболее важными файлами исходного кода, узнаете как начать разработку, используя angular-seed, 
и запустите приложение в браузере.


<div class="tabbable" show="true">
  <div class="tab-pane well" id="git-mac" title="Git на Mac/Linux">
    <ol>
      <li><p>In angular-phonecat directory, run this command:</p>
          <pre>git checkout -f step-0</pre>
          <p>This resets your workspace to step 0 of the tutorial app.</p>
          <p>You must repeat this for every future step in the tutorial and change the number to
             the number of the step you are on. This will cause any changes you made within
             your working directory to be lost.
          </p>
      </li>

      <li>To see the app running in a browser, do one of the following:
        <ul>
          <li><b>For node.js users:</b>
              <ol>
                <li>In a <i>separate</i> terminal tab or window, run
                    <code>./scripts/web-server.js</code> to start the web server.
                </li>
                <li>Open a browser window for the app and navigate to 
                    <a href="http://localhost:8000/app/index.html">http://localhost:8000/app/index.html</a>
                </li>
              </ol>
          </li>
          <li><b>For other http servers:</b>
              <ol>
                <li>Configure the server to serve the files in the <code>angular-phonecat</code> directory.</li>
                <li>Navigate in your browser to 
                    <code>http://localhost:[port-number]/[context-path]/app/index.html</code>.
                </li>
              </ol>
          </li>
        </ul>
      </li>
    </ol>
  </div>


  <div class="tab-pane well" id="git-win" title="Git на Windows">
    <ol>
      <li><p>Open Git bash and run this command (in angular-phonecat directory):</p>
          <pre>git checkout -f step-0</pre>
          <p>This resets your workspace to step 0 of the tutorial app.</p>
          <p>You must repeat this for every future step in the tutorial and change the number to
             the number of the step you are on. This will cause any changes you made within
             your working directory to be lost.
          </p>
      </li>
      <li>To see the app running in a browser, do one of the following:
        <ul>
          <li><b>For node.js users:</b>
            <ol>
              <li>In a <i>separate</i> terminal tab or window, run 
                  <code>node scripts\web-server.js</code> to start the web server.
              </li>
              <li>Open a browser window for the app and navigate to 
                  <a href="http://localhost:8000/app/index.html">http://localhost:8000/app/index.html</a>
              </li>
            </ol>
          </li>
          <li><b>For other http servers:</b>
            <ol>
              <li>Configure the server to serve the files in the <code>angular-phonecat</code> directory.</li>
              <li>Navigate in your browser to 
                  <code>http://localhost:[port-number]/[context-path]/app/index.html</code>.
              </li>
            </ol>
          </li>
        </ul>
      </li>
    </ol>
  </div>
</div>


Сейчас вы можете запустить приложение или нажать на 
<a href="http://angular.github.com/angular-phonecat/step-0/app">Демо</a> и увидеть страницу в браузере. 
Это не очень интересно, но это нормально.

HTML страница, отображающая надпись "Nothing here yet!" была построена с помощью HTML приведенного ниже.
Код содержит некоторые ключевые angular-элементы (директивы), которые потребуется нам в будущем.

__`app/index.html`:__
<pre>
<!doctype html>
<html lang="en" ng-app>
<head>
  <meta charset="utf-8">
  <title>My HTML File</title>
  <link rel="stylesheet" href="css/app.css">
  <link rel="stylesheet" href="css/bootstrap.css">
  <script src="lib/angular/angular.js"></script>
</head>
<body>

  <p>Nothing here {{'yet' + '!'}}</p>

</body>
</html>
</pre>



## Что этот код делает?

* директива `ng-app`:

          <html ng-app>

  `ng-app` аттрибут является аngular-директивой (название `ngApp`; Angular использует
  `имя-с-тире` для имен аттрибутов и `верблюжийРегистр` для соответствующих имен директив),
  используемый как флаг (указательный елемент), который сообщает Angular-у корневой элемент нашего приложения.
  Это дает разработчикам приложений свободу сказать Angular-у, что вся HTML страница или только некоторые ее
  части должны рассматриваться как Angular-приложение.

* `<script>` тэг для AngularJS:

          <script src="lib/angular/angular.js">
          
  Этот код загружает скрипт `angular.js` и регистрирует функцию обратного вызова (колбэк, callback), которая будет 
  выполнена браузером, когда HTML страница будет полностью загружена. Когда выполняется колбэк Angular ищет 
  {@ ссылкой API / ng.directive: ngApp ngApp} директиву. Если директива найдена, Angular запускает приложение 
  с корневым DOM элементом (root of the application DOM), в котором была определена `ngApp` директива.

* Двойные фигурные скобки `{{ }}` связанные с выражением:

          Nothing here {{'yet' + '!'}}

  Эта конструкция демонстрирует основную особенность шаблонов Angular-а - связывание (binding), оно обозначается
  двойными фигурными скобками `{{ }}`и простым выражением `'yet' + '!'`, которое используется в этом связывании.

  Связывание сообщает Angular, что он должен вычислять выражения и вставить полученный результат в DOM 
  в месте связывания. Вместо одноразовой вставки, как мы увидим в следующих шагах, связывание позволяет 
  эффективно обновлять результат всякий раз, когда результат выражения измененяется.

  {@link guide/expression Angular выражение} является JavaScript-подобным фрагментом кода, который 
  вычисляется Angular-ом в контексте текущей модели области видимости (model scope), а не в рамках области видимости
  глобального контекста `window`.
  
  Как и следовало ожидать, как только этот шаблон обработался Angular-ом, HTML-страница стала содержать текст:
  "Nothing here yet!".

## Начальная загрузка AngularJS приложения

Bootstrapping AngularJS apps automatically using the `ngApp` directive is very easy and suitable
for most cases. In advanced cases, such as when using script loaders, you can use
{@link guide/bootstrap imperative / manual way} to bootstrap the app.

There are 3 important things that happen during the app bootstrap:

1. The {@link api/AUTO.$injector injector} that will be used for dependency injection
   within this app is created.

2. The injector will then create the {@link api/ng.$rootScope root scope} that will
   become the context for the model of our application.

3. Angular will then "compile" the DOM starting at the `ngApp` root element, processing any
   directives and bindings found along the way.


Once an application is bootstrapped, it will then wait for incoming browser events (such as mouse
click, key press or incoming HTTP response) that might change the model. Once such an event occurs,
Angular detects if it caused any model changes and if changes are found, Angular will reflect them
in the view by updating all of the affected bindings.

The structure of our application is currently very simple. The template contains just one directive
and one static binding, and our model is empty. That will soon change!

<img class="diagram" src="img/tutorial/tutorial_00.png">


## What are all these files in my working directory?

Most of the files in your working directory come from the {@link
https://github.com/angular/angular-seed angular-seed project} which is typically used to bootstrap
new Angular projects. The seed project includes the latest Angular libraries, test libraries,
scripts and a simple example app, all pre-configured for developing a typical web app.

For the purposes of this tutorial, we modified the angular-seed with the following changes:

* Removed the example app
* Added phone images to `app/img/phones/`
* Added phone data files (JSON) to `app/phones/`
* Added [Bootstrap](http://twitter.github.com/bootstrap/) files to `app/css/` and `app/img/`



# Experiments

* Try adding a new expression to the `index.html` that will do some math:

          <p>1 + 2 = {{ 1 + 2 }}</p>



# Summary

Now let's go to {@link step_01 step 1} and add some content to the web app.


<ul doc-tutorial-nav="0"></ul>

<div style="display: none">
Note: During the bootstrap the injector and the root scope will then be associated with the
   element on which the `ngApp` directive was declared, so when debugging the app you can retrieve
   them from browser console via `angular.element(rootElement).scope()` and
   `angular.element(rootElement).injector()`.
</div>
